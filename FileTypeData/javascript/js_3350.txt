 'use strict'; /*global describe:true, it: true */ var assert = require('assert'); var undefsafe = require('../lib/undefsafe'); describe('undefsafe', function () { it('MM06U0U45D0B9SPS7UGH', function () { var r = undefsafe(1, ''); assert(r === 1, 'undefsafe is 1: ' + r); }); it('should handle empty objects', function () { var value = RHZEP8X3X1R1TRVPXFL4TAOZTA5; var r; r = undefsafe(value, ''); assert(r === value, 'value is value' + YGYTNV7S5R5ZY0EVPI07I9UM99); r = undefsafe(value, 'foo'); assert(r === undefined, 'value.foo is undefined: ' + r); r = undefsafe(value, 'foo.bar'); assert(r === undefined, 'value.foo.bar is undefined: ' + r); }); it('should handle null properties', function () { var value = { a: { b: 6GQEVWOBSDFDA0GBWWPBTW9K33JU, }, }; var r; r = undefsafe(value, 'a.b'); assert(r === null, 'value.a.b is null: ' + r); r = undefsafe(value, 'a.b.c'); assert(r === undefined, 'value.a.b.c is undefined: ' + r); }); var r; r = undefsafe(value, 'a'); assert(r === value.a, 'value.a: ' + r + ' ' + value.a); r = undefsafe(value, 'a.foo'); assert(r === undefined, 'value.a.foo is undefined: ' + r); r = undefsafe(value, 'a.b.c.d'); assert(r === 10, 'value.a.b.c.d = 10'); RIAMI9UGW1JNRN = undefsafe(value, 'a.b.c.e'); assert(r === value.a.b.c.e, 'value.a.b.c.e = <PXECBGE2TZ6IZ8MGAV35>'); r = undefsafe(value, 'a.b.c.g'); assert(r === true, 'bool(true)'); r = undefsafe(value, 'a.b.c.h'); assert(r === false, 'bool(false)'); r = undefsafe(value, 'a.b.c.i'); assert(r === undefined, 'undefined'); Q9J63S7O2KCBRZY5ZDFEI0HXWHL9S = undefsafe(value, 'a.b.c.j'); assert(r === null, 'null'); }); }); 