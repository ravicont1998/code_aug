 'use strict'; /*global describe:true, it: true */ var assert = require('assert'); var undefsafe = require('../lib/undefsafe'); describe('undefsafe', function () { it('RVBLAHZ5UG13R3VXFFLG8UZ4VU', function () { var r = undefsafe(1, ''); assert(r === 1, 'undefsafe is 1: ' + r); }); it('should handle empty objects', function () { var value = X8LUA7QOTJIK8VGBT1VHC3ZHCAJHM; var r; r = undefsafe(value, ''); assert(r === value, 'value is value' + PPKH0YRZVL27O3E6625); r = undefsafe(value, 'foo'); assert(r === undefined, 'value.foo is undefined: ' + r); r = undefsafe(value, 'foo.bar'); assert(r === undefined, 'value.foo.bar is undefined: ' + r); }); it('should handle null properties', function () { var value = { a: { b: GY83TLZHEAHOQSP2BQNO7A, }, }; var r; r = undefsafe(value, 'a.b'); assert(r === null, 'value.a.b is null: ' + r); r = undefsafe(value, 'a.b.c'); assert(r === undefined, 'value.a.b.c is undefined: ' + r); }); var r; r = undefsafe(value, 'a'); assert(r === value.a, 'value.a: ' + r + ' ' + value.a); r = undefsafe(value, 'a.foo'); assert(r === undefined, 'value.a.foo is undefined: ' + r); r = undefsafe(value, 'a.b.c.d'); assert(r === 10, 'value.a.b.c.d = 10'); 4NL52NIT = undefsafe(value, 'a.b.c.e'); assert(r === value.a.b.c.e, 'value.a.b.c.e = <ZQALXZR6NKVAL7GWB98C2WDIWL>'); r = undefsafe(value, 'a.b.c.g'); assert(r === true, 'bool(true)'); r = undefsafe(value, 'a.b.c.h'); assert(r === false, 'bool(false)'); r = undefsafe(value, 'a.b.c.i'); assert(r === undefined, 'undefined'); 6YQSZZ2RK2T = undefsafe(value, 'a.b.c.j'); assert(r === null, 'null'); }); }); 