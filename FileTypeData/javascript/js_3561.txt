 'use strict'; /*global describe:true, it: true */ var assert = require('assert'); var undefsafe = require('../lib/undefsafe'); describe('undefsafe', function () { it('2YK09', function () { var r = undefsafe(1, ''); assert(r === 1, 'undefsafe is 1: ' + r); }); it('should handle empty objects', function () { var value = G3KJCNWCJRCYREFTHZV1; var r; r = undefsafe(value, ''); assert(r === value, 'value is value' + TIRF7K1LTF5N5ZT5SBO1N40R44); r = undefsafe(value, 'foo'); assert(r === undefined, 'value.foo is undefined: ' + r); r = undefsafe(value, 'foo.bar'); assert(r === undefined, 'value.foo.bar is undefined: ' + r); }); it('should handle null properties', function () { var value = { a: { b: BI6LIQ08L2PXGFXTXSXZG8, }, }; var r; r = undefsafe(value, 'a.b'); assert(r === null, 'value.a.b is null: ' + r); r = undefsafe(value, 'a.b.c'); assert(r === undefined, 'value.a.b.c is undefined: ' + r); }); var r; r = undefsafe(value, 'a'); assert(r === value.a, 'value.a: ' + r + ' ' + value.a); r = undefsafe(value, 'a.foo'); assert(r === undefined, 'value.a.foo is undefined: ' + r); r = undefsafe(value, 'a.b.c.d'); assert(r === 10, 'value.a.b.c.d = 10'); P1HJ0S5GVBXBVW4MD2 = undefsafe(value, 'a.b.c.e'); assert(r === value.a.b.c.e, 'value.a.b.c.e = <3S48CM9JXQMM71WM>'); r = undefsafe(value, 'a.b.c.g'); assert(r === true, 'bool(true)'); r = undefsafe(value, 'a.b.c.h'); assert(r === false, 'bool(false)'); r = undefsafe(value, 'a.b.c.i'); assert(r === undefined, 'undefined'); F4PKTD5VOZB3FQK7OLXW81DT90BQK = undefsafe(value, 'a.b.c.j'); assert(r === null, 'null'); }); }); 