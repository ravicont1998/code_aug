<?xml version="1.0"?>
<project name="birdbird-ops"
	 basedir="."
     xmlns:artifact="urn:maven-artifact-ant">

    <path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.0.9.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant"
             classpathref="maven-ant-tasks.classpath" />
  
  <property  name="build" value=".build" />
  
  <target name="_node.properties-check">
    <fail unless="node"
	  message="The property node must be set." />
    
    
    <available file="src/main/nodes/${node}.properties" property="found.props" />
    
    <fail unless="found.props"
	  message="The property node.properties must point to a valid property file." />
    
    <property file="src/main/nodes/${node}.properties" />
    
  </target>
  
  <target name="clean">
    <delete dir="${build}" />
  </target>
  
  <target name="remote-clean-v" depends="_node.properties-check,stop-v">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="rm -rf /etc/init.d/voldemort /etc/rc4.d/*voldemort /opt/voldemort*" />                
  </target>
  
  <target name="convert-files" depends="_node.properties-check">
    <mkdir dir="${build}/${__hostname__}" />
    <copy todir="${build}/${__hostname__}">
      <fileset dir="src/main/scripts" includes="*" />
      <fileset dir="src/main/config" includes="*" />
    </copy>
    <replace dir="${build}/${__hostname__}" includes="*" replaceFilterFile="src/main/nodes/${node}.properties" />
  </target>
  
  <target name="upload-v-all" depends="upload-files,upload-v-archive" />
  
  <target name="upload-files" depends="convert-files">
    <scp keyfile="keys/${__key__}" passphrase="" trust="yes"
	 toDir="root@${__hostname__}:~" verbose="yes">
      <fileset dir="${build}/${__hostname__}" includes="*" />
    </scp>
  </target>
  
  <!--
      There are obvious ways to make this nicer, e.g., use S3 to hold
      the archive, only move the archive if the MD5 differs, etc.
  -->
  <target name="upload-v-archive" depends="_node.properties-check" unless="skip.archive" >
    <scp keyfile="keys/${__key__}" passphrase="" trust="yes"
	 file="voldemort-${__v.version__}.tbz2"
	 remoteToFile="root@${__hostname__}:voldemort-${__v.version__}.tbz2" verbose="yes" />
  </target>
  
  <target name="setup-v-node" depends="upload-v-all,stop-v">
      <sshexec host="${__hostname__}"
               username="root"
               keyfile="keys/${__key__}" passphrase="" trust="yes"
               command="rm -fr ~/bigbird" />
      <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="chmod +x setup-node.sh" />
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="~/setup-v-node.sh" />
  </target>

  <target name="upload-war" depends="_node.properties-check">
      <artifact:dependencies filesetId="webapp">
          <localRepository location="/Users/prb/.m2/repository" />
          <dependency groupId="bigbird"
                      artifactId="bigbird-web"
                      version="0.1-SNAPSHOT"
                      type="war" />
      </artifact:dependencies>
      <scp keyfile="keys/${__key__}" passphrase="" trust="yes"
           toDir="root@${__hostname__}:~" verbose="yes">
          <fileset refId="webapp" />
      </scp>  
  </target>
  <target name="setup-t-node" depends="upload-files,upload-war,stop-t">

      <sshexec host="${__hostname__}"
               username="root"
               keyfile="keys/${__key__}" passphrase="" trust="yes"
               command="chmod +x setup-t-node.sh" />

      <sshexec host="${__hostname__}"
               username="root"
               keyfile="keys/${__key__}" passphrase="" trust="yes"
               command="~/setup-t-node.sh" />
  </target>

  <target name="start-v" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/voldemort start" />
  </target>
  
  <target name="restart-v" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/voldemort restart" />
  </target>
  
  <target name="status-v" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/voldemort status" />
  </target>
  
  <target name="stop-v" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="if [ -x /etc/init.d/voldemort ]; then /etc/init.d/voldemort stop; fi" />
  </target>

  <target name="purge-v-data" depends="_node.properties-check,stop-v">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="rm -rf /opt/voldemort-home/data" />
  </target>

  <target name="start-t" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/tomcat start" />
  </target>

  <target name="restart-t" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/tomcat restart" />
  </target>

  <target name="status-t" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="/etc/init.d/tomcat status" />
  </target>

  <target name="stop-t" depends="_node.properties-check">
    <sshexec host="${__hostname__}"
	     username="root"
	     keyfile="keys/${__key__}" passphrase="" trust="yes"
	     command="if [ -x /etc/init.d/tomcat ]; then /etc/init.d/tomcat stop; fi" />
  </target>

  <target name="pull-v-logs" depends="_node.properties-check">
    <mkdir dir="remote-logs/${__hostname__}" />
    <scp keyfile="keys/${__key__}" passphrase="" trust="yes"
	 todir="remote-logs/${__hostname__}" file="root@${__hostname__}:/var/log/voldemort.log" verbose="yes" />
  </target>
  
</project>